@page "/permissions"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components

<h3>Radio Buttons Example</h3>

<div>
    <input type="radio" id="option1" name="mainOption" value="1" @onchange="UpdateMainOption" />
    <label for="option1">Option 1</label>

    <input type="radio" id="option2" name="mainOption" value="2" @onchange="UpdateMainOption" />
    <label for="option2">Option 2</label>
</div>

<div>
    <input type="radio" id="optionA" name="subOption" value="A" @onchange="UpdateSubOption" />
    <label for="optionA">Option A</label>

    <input type="radio" id="optionB" name="subOption" value="B" @onchange="UpdateSubOption" />
    <label for="optionB">Option B</label>

    <input type="radio" id="optionC" name="subOption" value="C" @onchange="UpdateSubOption" />
    <label for="optionC">Option C</label>

    <input type="radio" id="optionD" name="subOption" value="D" @onchange="UpdateSubOption" />
    <label for="optionD">Option D</label>
</div>

@if (!string.IsNullOrEmpty(resultText))
{
    <p>@resultText</p>
}

@code {
    private string? mainOption;
    private string? subOption;
    private string? resultText;

    private void UpdateMainOption(ChangeEventArgs e)
    {
        mainOption = e.Value?.ToString() ?? string.Empty;
        subOption = null; // Reset sub-option when main option changes
        resultText = string.Empty; // Clear result text
        UpdateResultText(); // Update result text based on new main option
    }

    private void UpdateSubOption(ChangeEventArgs e)
    {
        subOption = e.Value?.ToString() ?? string.Empty;
        UpdateResultText(); // Update result text based on both main and sub options
    }

    private void UpdateResultText()
    {
        resultText = (mainOption, subOption) switch
        {
            ("1", "A") => "something 1",
            ("1", "B") => "something 2",
            ("1", "C") => "something 3",
            ("1", "D") => "something 4",
            ("2", "A") => "something 5",
            ("2", "B") => "something 6",
            ("2", "C") => "something 7",
            ("2", "D") => "something 8",
            _ => string.Empty
        };
    }
}
